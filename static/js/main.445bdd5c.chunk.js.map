{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Homepage.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.jsx","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","MoneyCollectOutlined","BulbOutlined","FundOutlined","cryptoApiHeader","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Exchanges","Component","cryptoNewsApiHeader","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Option","Select","demoImage","News","setNewsCategory","cryptoNews","gutter","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","coin","name","news","index","xs","sm","lg","hoverable","href","target","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","substring","provider","datePublished","Cryptocurrencies","cryptoList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","includes","e","currency","id","rank","extra","iconUrl","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","forEach","h","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scale","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","time","HTMLReactParser","links","link","type","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.445bdd5c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\n\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n\n  }, []);\n\n  useEffect(() => {\n    setActiveMenu(!(screenSize < 768));\n  }, [screenSize]);\n\n  return (\n    <div className='nav-container'>\n      <div className='logo-container'>\n        <Avatar src={icon} size=\"large\"/>\n        <Typography.Title level={2} className='logo'>\n          <Link to='/'>Cryptoverse</Link>\n        </Typography.Title>\n\n        <Button className='menu-control-container' onClick={() => setActiveMenu(!activeMenu)}>\n          <MenuOutlined />\n        </Button>\n      </div>\n      { activeMenu && (\n          <Menu theme=\"dark\">\n            <Menu.Item icon={<HomeOutlined />}>\n                <Link to=\"/\">Home</Link>\n            </Menu.Item>\n            <Menu.Item icon={<MoneyCollectOutlined />}>\n                <Link to=\"/exchanges\">Exchanges</Link>\n            </Menu.Item>\n            <Menu.Item icon={<BulbOutlined />}>\n                <Link to=\"/news\">News</Link>\n            </Menu.Item>\n            <Menu.Item icon={<FundOutlined />}>\n                <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n            </Menu.Item>\n          </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeader = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '463ba6a1c1mshc8ef46135e5377ap18525ejsnb887f83c92be'\n};\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeader });\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins?limit=${count}`)\n        }),\n        getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`)\n        }),\n        getCryptoHistory: builder.query({\n            query: ({coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n        })\n    })\n});\n\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoHistoryQuery\n} = cryptoApi;\n","import React from 'react';\n\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nimport { Cryptocurrencies, News } from '../components';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n    const { data, isFetching } = useGetCryptosQuery(10);\n    const globalStats = data?.data?.stats;\n\n    if (isFetching) {\n        return 'Loading...';\n    }\n\n    return (\n        <>\n            <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n            <Row>\n                <Col span={12}>\n                    <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total Market\" value={millify(globalStats.totalMarkets)} />\n                </Col>\n            </Row>\n\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\n                <Title level={3} className=\"show-more\">\n                    <Link to=\"/cryptocurrencies\">Show more</Link>\n                </Title>\n            </div>\n            <Cryptocurrencies simplified />\n\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n                <Title level={3} className=\"show-more\">\n                    <Link to=\"/news\">Show more</Link>\n                </Title>\n            </div>\n            <News simplified />\n        </>\n    )\n}\n\nexport default Homepage\n","import React, { Component } from 'react'\n\nexport class Exchanges extends Component {\n    render() {\n        return (\n            <div>\n                Exchanges component\n            </div>\n        )\n    }\n}\n\nexport default Exchanges\n","import {\n    createApi,\n    fetchBaseQuery\n} from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsApiHeader = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': '463ba6a1c1mshc8ef46135e5377ap18525ejsnb887f83c92be'\n};\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst createRequest = url => ({\n    url,\n    headers: cryptoNewsApiHeader\n});\n\nexport const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl\n    }),\n    endpoints: builder => ({\n        getCryptoNews: builder.query({\n            query: ({\n                newsCategory,\n                count\n            }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\n        })\n    })\n});\n\nexport const {\n    useGetCryptoNewsQuery\n} = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport dayjs from 'dayjs';\n\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst News = ({ simplified }) => {\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrencies');\n\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n    const { data } = useGetCryptosQuery(100);\n\n    if (!cryptoNews?.value) {\n        return 'Loading...';\n    }\n\n    return (\n        <Row gutter={[24, 24]}>\n            { !simplified && (\n                <Col span={24}>\n                    <Select \n                        showSearch \n                        className=\"select-news\"\n                        placeholder=\"Select a Crypto\"\n                        optionFilterProp=\"children\"\n                        onChange={(value) => setNewsCategory(value)}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) > 0 } >\n                        <Option value=\"Cryptocurrency\"></Option>\n                        { data?.data?.coins.map(coin => (\n                            <Option value={ coin.name }>{ coin.name }</Option>\n                        ))}\n                    </Select>\n                </Col>\n            )}\n            { cryptoNews?.value.map((news, index) => (\n                <Col xs={24} sm={12} lg={8} key={index}>\n                    <Card hoverable className=\"news-card\">\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n                            <div className=\"news-image-container\">\n                                <Title className=\"news-title\" level={4}>{ news.name }</Title>\n                                <img style={{ maxWidth: '200px', maxHeight: '200px' }} src={news?.image?.thumbnail?.contentUrl || demoImage } alt=\"news\"/>\n                            </div>\n                            <p>\n                                { news.description > 100 ? `${news.description.substring(0, 100)}...` : news.description }\n                            </p>\n                            <div className=\"provider-container\">\n                                <div>\n                                    <Avatar src={ news.provider[0]?.image?.thumbnail?.contentUrl || demoImage } alt=\"\"/>\n                                    <Text className=\"provider-name\">{ news.provider[0]?.name }</Text>\n                                </div>\n                                <Text>\n                                    { news.datePublished }\n                                </Text>\n                            </div>\n                        </a>\n                    </Card>\n                </Col>\n            ))}\n        </Row>\n    )\n}\n\nexport default News\n","import React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Row, Card, Col, Input } from 'antd';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nconst Cryptocurrencies = ({ simplified }) => {\n    const count = simplified ? 10 : 100;\n\n    const { data: cryptoList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        const filteredData = cryptoList?.data?.coins.filter(coin => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n        setCryptos(filteredData);\n    }, [cryptoList, searchTerm]);\n\n    if (isFetching) {\n        return 'Loading...';\n    }\n\n    return (\n        <>\n            { !simplified && (\n                <Row className=\"search-crypto\">\n                    <Input placeholder=\"Search Cryptocurrencies\" onChange={(e) => setSearchTerm(e.target.value)} />\n                </Row>\n            )}\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\n                { cryptos?.map((currency) => (\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n                        <Link to={`/crypto/${currency.id}`}>\n                            <Card title={`${currency.rank}. ${currency.name}`} \n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"\" />}\n                                hoverable>\n                                <p>Price: { millify(currency.price) }</p>\n                                <p>Market Cap: { millify(currency.marketCap) }</p>\n                                <p>Daily Change: { millify(currency.change) }%</p>\n                            </Card>\n                        </Link>\n                    </Col>\n                ))}\n            </Row>\n        </>\n    )\n}\n\nexport default Cryptocurrencies\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n    const coinPrice = [];\n    const coinTimestamp = [];\n\n    coinHistory?.data?.history.forEach(h => {\n        coinPrice.push(h.price);\n        coinTimestamp.push(new Date(h.timestamp).toLocaleDateString());\n    });\n\n    const data = {\n        labels: coinTimestamp,\n        datasets: [\n            {\n                label: 'Price in USD',\n                data: coinPrice,\n                fill: false,\n                backgroundColor: '#0071bd',\n                borderColor: '#0071bd'\n            }\n        ]\n    };\n\n    const options = {\n        scale: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }\n            ]\n        }\n    };\n\n    return (\n        <>\n            <Row className=\"chart-header\">\n                <Title level={2} className=\"chart-title\">{ coinName} Price Chart</Title>\n                <Col className=\"price-container\">\n                    <Title level={5} className=\"price-change\">\n                        { coinHistory?.data?.change }%\n                    </Title>\n                    <Title level={5} className=\"current-price\">\n                        Current { coinName } Price: $ { currentPrice }\n                    </Title>\n                </Col>\n            </Row>\n            <Line data={data} options={options}/>\n        </>\n    )\n}\n\nexport default LineChart\n","import React, { useState } from 'react';\n\nimport HTMLReactParser from 'html-react-parser';\nimport {\n    useParams\n} from 'react-router-dom';\nimport millify from 'millify';\nimport {\n    Col,\n    Row,\n    Typography,\n    Select\n} from 'antd';\nimport {\n    MoneyCollectOutlined,\n    DollarCircleOutlined,\n    FundOutlined,\n    ExclamationCircleOutlined,\n    StopOutlined,\n    TrophyOutlined,\n    CheckOutlined,\n    NumberOutlined,\n    ThunderboltOutlined\n} from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n\nconst CryptoDetails = () => {\n    const { coinId } = useParams();\n    const [timePeriod, setTimePeriod] = useState('7d');\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\n    const cryptoDetails = data?.data?.coin;\n\n    if (isFetching) {\n        return 'Loading...';\n    }\n\n    const times = ['3h', '24h', '7d', '30d', '1y', '3y', '5y'];\n\n    const stats = [\n        {\n            title: 'Price to USD',\n            value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n            icon: <DollarCircleOutlined />\n        },\n        {\n            title: 'Rank',\n            value: cryptoDetails.rank,\n            icon: <NumberOutlined />\n        },\n        {\n            title: '24h Volume',\n            value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n            icon: <ThunderboltOutlined />\n        },\n        { \n            title: 'Market Cap',\n            value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n            icon: <DollarCircleOutlined /> \n        },\n        { \n            title: 'All-time-high(daily avg.)',\n            value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n            icon: <TrophyOutlined />\n        }\n    ];\n\n    const genericStats = [\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n    ];\n\n    return ( \n        <Col className=\"coin-detail-container\">\n            <Col className=\"coin-heading-container\">\n                <Title level={2} className=\"coin-name\">{ cryptoDetails.name } ({ cryptoDetails.slug }) Price</Title>\n                \n                <p>{ cryptoDetails.name} live price in US dollar. View value statistics, market cap and supply.</p>\n            </Col>\n            <Select \n                defaultValue=\"7d\"\n                className=\"select-timeperiod\"\n                placeholder=\"Select Time Period\"\n                onChange={(value) => setTimePeriod(value)}>\n                { times.map(time => <Option value={time}>{ time }</Option>)}\n            </Select>\n\n            <LineChart coinHistory={coinHistory} currentPrice={ millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n\n            <Col className=\"stats-container\">\n                <Col className=\"coin-value-statistics\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">\n                            { cryptoDetails.name} Value Statistics\n                        </Title>\n                        <p>\n                            An overview showing the statistics of crypto details <strong>{ cryptoDetails.name }</strong>\n                        </p>\n                        { stats.map(({title, value, icon}) => (\n                            <Col className=\"coin-stats\">\n                                <Col className=\"coin-stats-name\">\n                                    <Text>{ icon }</Text>\n                                    <Text>{ title }</Text>\n                                    \n                                </Col>\n                                <Col>\n                                    <Text className=\"stats\">{ value }</Text>\n                                </Col>\n                            </Col>\n                        ))}\n                    </Col>\n                </Col>\n\n                <Col className=\"other-stats-info\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">\n                            Other Statistics\n                        </Title>\n                        <p>\n                            An overview showing the statistics of all cryptocurrencies\n                        </p>\n                        { genericStats.map(({title, value, icon}) => (\n                            <Col className=\"coin-stats\">\n                                <Col className=\"coin-stats-name\">\n                                    <Text>{ icon }</Text>\n                                    <Text>{ title }</Text>\n                                    \n                                </Col>\n                                <Col>\n                                    <Text className=\"stats\">{ value }</Text>\n                                </Col>\n                            </Col>\n                        ))}\n                    </Col>\n                </Col>\n            </Col>\n\n            <Col className=\"coin-desc-link\">\n                <Row className=\"coin-desc\">\n                    <Title level={3} className=\"coin-details-heading\">\n                        What is { cryptoDetails.name }\n                        { HTMLReactParser(cryptoDetails.description) }\n                    </Title>\n                </Row>\n                <Col className=\"coin-links\">\n                    <Title level={3} className=\"coin-details-heading\">\n                        { cryptoDetails.name} Links\n                    </Title>\n                    { cryptoDetails.links.map(link => \n                        <Row className=\"coin-link\" key={link.name}>\n                            <Title level={5} className=\"link-name\">\n                                { link.type }\n                            </Title>\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                                { link.name }\n                            </a>\n                        </Row>)\n                    }\n                </Col>\n            </Col>\n        </Col>\n    )\n}\n\nexport default CryptoDetails","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport {\n  Navbar,\n  Homepage,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetails,\n  News,\n} from './components';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <div className='navbar'>\n        <Navbar />\n      </div>\n\n      <div className='main'>\n        <Layout>\n          <div className='routes'>\n            <Switch>\n              <Route exact path='/'>\n                <Homepage />\n              </Route>\n              <Route exact path='/exchanges'>\n                <Exchanges />\n              </Route>\n              <Route exact path='/cryptocurrencies'>\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path='/crypto/:coinId'>\n                <CryptoDetails />\n              </Route>\n              <Route exact path='/news'>\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className='footer'>\n            <Typography.Title level={5} style={{ color: \"white\", textAlign: 'center' }}>\n                Cryptoverse\n                <br />\n                All rights reserverd\n            </Typography.Title>\n            <Space>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/exchanges\">Exchanges</Link>\n                <Link to=\"/Cryptocurrencies\">cryptocurrencies</Link>\n                <Link to=\"/news\">News</Link>\n            </Space>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>, document.getElementById('root')\n);\n"],"sourceRoot":""}